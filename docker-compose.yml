version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Akash@2003
      MYSQL_DATABASE: banking_system
      MYSQL_TCP_PORT: 3306
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - banking-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - banking-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - banking-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - banking-network

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - banking-network

  auth-server:
    container_name: auth-server
    build:
      context: ./auth-server
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_PRIVATE_KEY_FILE: /run/secrets/jwt_private_key
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
      JWT_EXPIRATION: 3600000
    secrets:
      - source: jwt_private_key
        target: jwt_private_key
        mode: 0440
      - source: jwt_public_key
        target: jwt_public_key
        mode: 0444
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - banking-network

  user-service:
    container_name: user-service
    build:
      context: ./user-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
    secrets:
      - source: jwt_public_key
        target: jwt_public_key
        mode: 0444
    depends_on:
      auth-server:
        condition: service_started
    networks:
      - banking-network

  account-service:
    container_name: account-service
    build:
      context: ./account-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
    secrets:
      - source: jwt_public_key
        target: jwt_public_key
        mode: 0444
    depends_on:
      auth-server:
        condition: service_started
    networks:
      - banking-network

  transaction-server:
    container_name: transaction-server
    build:
      context: ./transaction-server
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
    secrets:
      - source: jwt_public_key
        target: jwt_public_key
        mode: 0444
    depends_on:
      auth-server:
        condition: service_started
      kafka:
        condition: service_healthy
    networks:
      - banking-network

  notification-server:
    container_name: notification-server
    build:
      context: ./notification-server
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
    secrets:
      - source: jwt_public_key
        target: jwt_public_key
        mode: 0444
    depends_on:
      auth-server:
        condition: service_started
      kafka:
        condition: service_healthy
    networks:
      - banking-network

volumes:
  mysql_data:
  kafka_data:

secrets:
  jwt_private_key:
    file: ./jwt-secrets/private-key.pem
  jwt_public_key:
    file: ./jwt-secrets/public-key.pem

networks:
  banking-network:
    driver: bridge